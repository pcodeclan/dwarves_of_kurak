Index: src/main/java/com/example/codeclan/DwarvesOfKurak/models/Character.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.codeclan.DwarvesOfKurak.models;\n\nimport com.fasterxml.jackson.annotation.JsonBackReference;\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport org.hibernate.annotations.Cascade;\n\nimport javax.persistence.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\n@Entity\n@Table(name = \"characters\")\npublic class Character {\n\n    @Id\n    @GeneratedValue ( strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"name\")\n    private String name;\n\n    @Column(name = \"race\")\n    private String race;\n\n    @Column(name = \"gender\")\n    private String gender;\n\n    @Column(name = \"backStory\")\n    private String backStory;\n\n//    change to item once we put it\n    @Column(name = \"weapon\")\n    private String weapon;\n\n    @Column(name = \"armour\")\n    private String armour;\n\n    @Column(name = \"hitPoints\")\n    private int hitPoints;\n\n    @Column(name = \"manaPoints\")\n    private int manaPoints;\n\n    @Column(name = \"strength\")\n    private int strength;\n\n    @Column(name = \"intelligence\")\n    private int intelligence;\n\n    @JsonBackReference\n    @OneToMany(mappedBy = \"character\", fetch = FetchType.LAZY)\n    private List<Item> inventory;\n\n    @ManyToMany\n    @Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)\n    @JoinTable(name = \"skills_characters\",\n            joinColumns = {@JoinColumn(\n                    name = \"skill_id\",\n                    nullable = false,\n                    updatable = false\n            )},\n\n            inverseJoinColumns = {@JoinColumn(\n                    name = \"character_id\",\n                    nullable = false,\n                    updatable = false\n            )}\n            )\n    private List<Skill> skills;\n\n    @Column(name = \"coinPurse\")\n    private int coinPurse;\n\n\n//    @Column(name = \"jobClass\")\n//    private Job job;\n\n    public Character(String name, String race, String gender, String backStory) {\n        this.name = name;\n        this.race = race;\n        this.gender = gender;\n        this.backStory = backStory;\n        this.weapon = null;\n        this.armour = null;\n        this.hitPoints = 100;\n        this.manaPoints = 50;\n        this.strength = 5;\n        this.intelligence = 5;\n        this.inventory = new ArrayList<Item>();\n//        this.skills = new ArrayList<Skill>();\n        this.coinPurse = 1000;\n//        this.job = job;\n    }\n\n    public Character(){\n\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getRace() {\n        return race;\n    }\n\n    public void setRace(String race) {\n        this.race = race;\n    }\n\n    public String getGender() {\n        return gender;\n    }\n\n    public void setGender(String gender) {\n        this.gender = gender;\n    }\n\n    public String getBackStory() {\n        return backStory;\n    }\n\n    public void setBackStory(String backStory) {\n        this.backStory = backStory;\n    }\n\n    public String getWeapon() {\n        return weapon;\n    }\n\n    public void setWeapon(String weapon) {\n        this.weapon = weapon;\n    }\n\n    public String getArmour() {\n        return armour;\n    }\n\n    public void setArmour(String armour) {\n        this.armour = armour;\n    }\n\n    public int getHitPoints() {\n        return hitPoints;\n    }\n\n    public void setHitPoints(int hitPoints) {\n        this.hitPoints = hitPoints;\n    }\n\n    public int getManaPoints() {\n        return manaPoints;\n    }\n\n    public void setManaPoints(int manaPoints) {\n        this.manaPoints = manaPoints;\n    }\n\n    public int getStrength() {\n        return strength;\n    }\n\n    public void setStrength(int strength) {\n        this.strength = strength;\n    }\n\n    public int getIntelligence() {\n        return intelligence;\n    }\n\n    public void setIntelligence(int intelligence) {\n        this.intelligence = intelligence;\n    }\n\n    public int getCoinPurse() {\n        return coinPurse;\n    }\n\n    public void setCoinPurse(int coinPurse) {\n        this.coinPurse = coinPurse;\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public List<Item> getInventory() {\n        return inventory;\n    }\n\n    public void setInventory(List<Item> inventory) {\n        this.inventory = inventory;\n    }\n\n    public List<Skill> getSkills() {\n        return skills;\n    }\n\n    public void setSkills(List<Skill> skills) {\n        this.skills = skills;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/codeclan/DwarvesOfKurak/models/Character.java	(revision 8fc1b0086a6e649f178cb2c987ab2dfc7f7f6503)
+++ src/main/java/com/example/codeclan/DwarvesOfKurak/models/Character.java	(date 1592660025105)
@@ -49,7 +49,7 @@
 
     @JsonBackReference
     @OneToMany(mappedBy = "character", fetch = FetchType.LAZY)
-    private List<Item> inventory;
+    private List<Item> item;
 
     @ManyToMany
     @Cascade(org.hibernate.annotations.CascadeType.SAVE_UPDATE)
@@ -86,7 +86,7 @@
         this.manaPoints = 50;
         this.strength = 5;
         this.intelligence = 5;
-        this.inventory = new ArrayList<Item>();
+        this.item = new ArrayList<Item>();
 //        this.skills = new ArrayList<Skill>();
         this.coinPurse = 1000;
 //        this.job = job;
@@ -189,11 +189,11 @@
     }
 
     public List<Item> getInventory() {
-        return inventory;
+        return item;
     }
 
-    public void setInventory(List<Item> inventory) {
-        this.inventory = inventory;
+    public void setInventory(List<Item> item) {
+        this.item = item;
     }
 
     public List<Skill> getSkills() {
@@ -203,4 +203,8 @@
     public void setSkills(List<Skill> skills) {
         this.skills = skills;
     }
+
+    public void addInventory(Item  item) {
+        this.item.add(item);
+    }
 }
\ No newline at end of file
